<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ys.web.mapper.YsStudentMapper">
    
    <resultMap type="YsStudent" id="YsStudentResult">
        <result property="studentId"    column="student_id"    />
        <result property="studentName"    column="student_name"    />
        <result property="studentAge"    column="student_age"    />
        <result property="studentSex"    column="student_sex"    />
        <result property="studentStatus"    column="student_status"    />
        <result property="studentBirthday"    column="student_birthday"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectYsStudentVo">
        select student_id, student_name, student_age, student_sex, student_status, student_birthday, remark from ys_student
    </sql>

    <select id="selectYsStudentList" parameterType="YsStudent" resultMap="YsStudentResult">
        <include refid="selectYsStudentVo"/>
        <where>  
            <if test="studentName != null  and studentName != ''"> and student_name like concat('%', #{studentName}, '%')</if>
            <if test="studentAge != null "> and student_age = #{studentAge}</if>
            <if test="studentSex != null  and studentSex != ''"> and student_sex = #{studentSex}</if>
            <if test="studentStatus != null  and studentStatus != ''"> and student_status = #{studentStatus}</if>
            <if test="studentBirthday != null "> and student_birthday = #{studentBirthday}</if>
        </where>
    </select>
    
    <select id="selectYsStudentById" parameterType="Long" resultMap="YsStudentResult">
        <include refid="selectYsStudentVo"/>
        where student_id = #{studentId}
    </select>
        
    <insert id="insertYsStudent" parameterType="YsStudent" useGeneratedKeys="true" keyProperty="studentId">
        insert into ys_student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentName != null  and studentName != ''">student_name,</if>
            <if test="studentAge != null ">student_age,</if>
            <if test="studentSex != null  and studentSex != ''">student_sex,</if>
            <if test="studentStatus != null  and studentStatus != ''">student_status,</if>
            <if test="studentBirthday != null ">student_birthday,</if>
            <if test="remark != null  and remark != ''">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentName != null  and studentName != ''">#{studentName},</if>
            <if test="studentAge != null ">#{studentAge},</if>
            <if test="studentSex != null  and studentSex != ''">#{studentSex},</if>
            <if test="studentStatus != null  and studentStatus != ''">#{studentStatus},</if>
            <if test="studentBirthday != null ">#{studentBirthday},</if>
            <if test="remark != null  and remark != ''">#{remark},</if>
         </trim>
    </insert>

    <update id="updateYsStudent" parameterType="YsStudent">
        update ys_student
        <trim prefix="SET" suffixOverrides=",">
            <if test="studentName != null  and studentName != ''">student_name = #{studentName},</if>
            <if test="studentAge != null ">student_age = #{studentAge},</if>
            <if test="studentSex != null  and studentSex != ''">student_sex = #{studentSex},</if>
            <if test="studentStatus != null  and studentStatus != ''">student_status = #{studentStatus},</if>
            <if test="studentBirthday != null ">student_birthday = #{studentBirthday},</if>
            <if test="remark != null  and remark != ''">remark = #{remark},</if>
        </trim>
        where student_id = #{studentId}
    </update>

    <delete id="deleteYsStudentById" parameterType="Long">
        delete from ys_student where student_id = #{studentId}
    </delete>

    <delete id="deleteYsStudentByIds" parameterType="String">
        delete from ys_student where student_id in 
        <foreach item="studentId" collection="array" open="(" separator="," close=")">
            #{studentId}
        </foreach>
    </delete>
    
</mapper>